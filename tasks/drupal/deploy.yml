---
# BUILD

- name: Download build {{ steamengine_build_url }}
  ansible.builtin.get_url:
    url: "{{ steamengine_build_url }}"
    dest: "{{ steamengine_project_root_path }}/project.zip"
    checksum: "{{ checksum_verified }}"
    owner: "{{ steamengine_project_user }}"
    group: "{{ steamengine_project_user }}"
    mode: u=rwx,g=rx,o=
    headers: "{{ steamengine_build_url_headers }}"
    validate_certs: "{{ steamengine_build_url_validate_certs }}"
  notify:
    - "{{ steamengine_project_name }} fixpermissions"
  register: get_url_build
  tags:
    - steamengine_deploy_drupal

- name: "Is there a new build: {{ get_url_build.changed }}"
  ansible.builtin.set_fact:
    new_build_to_deploy: "{{ get_url_build.changed | bool }}"
  tags:
    - steamengine_deploy_drupal

- name: "Add maintenance page"
  ansible.builtin.copy:
    src: "files/maintenance.html"
    dest: "{{ steamengine_project_root_path }}/maintenance.html"
    owner: "{{ steamengine_project_user }}"
    group: "{{ steamengine_project_user }}"
    mode: u=rwx,g=rx,o=
  tags:
    - steamengine_deploy
  when: new_build_to_deploy and steamengine_drupal_show_maintenance_page

- name: Create tmp directory
  ansible.builtin.tempfile:
    state: directory
    suffix: "{{ steamengine_project_name }}"
  register: tempdir
  when: new_build_to_deploy
  tags:
    - steamengine_deploy_drupal

- name: Unarchive build
  ansible.builtin.unarchive:
    src: "{{ steamengine_project_root_path }}/project.zip"
    dest: "{{ tempdir.path }}"
    remote_src: true
    owner: "{{ steamengine_project_user }}"
    group: "{{ steamengine_project_user }}"
  when: new_build_to_deploy
  tags:
    - steamengine_deploy_drupal

- name: Ensure settings is present
  ansible.builtin.copy:
    src: "{{ tempdir.path }}{{ steamengine_drupal_public_directory }}/sites/default/default.settings.php"
    dest: "{{ steamengine_conf_path }}/settings.php"
    force: false
    remote_src: true
    owner: "{{ steamengine_project_user }}"
    group: "{{ steamengine_project_user }}"
    mode: u=rwx,g=rx,o=
  register: drupal_settings
  when: new_build_to_deploy
  tags:
    - steamengine_deploy_drupal

- name: Customize drupal settings
  ansible.builtin.blockinfile:
    dest: "{{ steamengine_conf_path }}/settings.php"
    block: "{{ steamengine_drupal_project_setting }}"
    mode: u=rwx,g=rx,o=
    owner: "{{ steamengine_project_user }}"
    group: "{{ steamengine_project_user }}"
  when: new_build_to_deploy
  tags:
    - steamengine_deploy_drupal

- name: Check www directory exists
  ansible.builtin.stat:
    path: "{{ steamengine_project_root_path_web }}"
  register: root_path_web_directory

- name: Fix permissions before updating source
  ansible.builtin.command: "/{{ steamengine_project_name }}/bin/steamengine fixpermissions"
  when: new_build_to_deploy and root_path_web_directory.stat.exists
  tags:
    - steamengine_deploy_drupal

- name: Clean www directory
  ansible.builtin.file:
    path: "{{ steamengine_project_root_path_web }}"
    state: absent
  when: new_build_to_deploy
  tags:
    - steamengine_deploy_drupal

- name: "Move archive files to {{ steamengine_project_root_path_web }}"
  ansible.builtin.command: "mv {{ tempdir.path }} {{ steamengine_project_root_path_web }}"
  when: new_build_to_deploy
  tags:
    - steamengine_deploy_drupal

- name: "Add read permission for {{ steamengine_project_user }}"
  ansible.builtin.file:
    path: "{{ steamengine_project_root_path_web }}"
    owner: "{{ steamengine_project_user }}"
    group: "{{ steamengine_project_user }}"
    recurse: true
    mode: u=rwx,g=rx,o=
  when: new_build_to_deploy
  tags:
    - steamengine_deploy_drupal

- name: Clean configuration file
  ansible.builtin.file:
    state: absent
    path: "{{ steamengine_project_root_path_web }}{{ steamengine_drupal_public_directory }}/sites/default/settings.php"
  when: new_build_to_deploy
  tags:
    - steamengine_deploy_drupal

- name: Create configuration link
  ansible.builtin.file:
    state: link
    src: "{{ steamengine_conf_path }}/settings.php"
    dest: "{{ steamengine_project_root_path_web }}{{ steamengine_drupal_public_directory }}/sites/default/settings.php"
  when: new_build_to_deploy
  tags:
    - steamengine_deploy_drupal

# Add .env file for env_variables drupal modules: https://www.drupal.org/project/env_variables

- include_tasks:
    file: "./deploy_env_file.yml"
    apply:
      tags:
        - steamengine_deploy
        - steamengine_deploy_drupal
  when:
    - steamengine_drupal_env is defined and steamengine_drupal_env
    - new_build_to_deploy
  tags:
    - always

- name: Check if database is empty
  ansible.builtin.command: "{{ steamengine_drupal_drush_launcher_path }} -r {{ steamengine_project_root_path_web }} sql-query 'show tables'"
  register: steamengine_drupal_database_table_number
  when: new_build_to_deploy
  tags:
    - steamengine_deploy_drupal

- name: "Is a new deploy: {{ steamengine_drupal_database_table_number.changed and not steamengine_drupal_database_table_number.stdout }}"
  ansible.builtin.set_fact:
    steamengine_drupal_initial_install: "{{ steamengine_drupal_database_table_number.changed and not steamengine_drupal_database_table_number.stdout }}"
  tags:
    - steamengine_deploy_drupal

# Install with MySQL Database

- include_tasks:
    file: "./deploy_database.yml"
    apply:
      tags:
        - steamengine_deploy
        - steamengine_deploy_drupal
  when: steamengine_drupal_initial_install and steamengine_drupal_db_dump_url is defined and steamengine_drupal_db_dump_url
  tags:
    - steamengine_deploy_drupal

# Install with Drush

- include_tasks:
    file: "./install_from_drush.yml"
    apply:
      tags:
        - steamengine_deploy
        - steamengine_deploy_drupal
  when: steamengine_drupal_initial_install and steamengine_drupal_install_from_drush
  tags:
    - steamengine_deploy_drupal

# Finish install

- include_tasks:
    file: "./deploy_dump_db.yml"
    apply:
      tags:
        - steamengine_deploy
        - steamengine_deploy_drupal
  when: new_build_to_deploy
  tags:
    - steamengine_deploy_drupal

- name: Fix drush cache permissions
  ansible.builtin.command: "/{{ steamengine_project_name }}/bin/steamengine drush_fix_permissions"
  when: new_build_to_deploy or steamengine_drupal_initial_install
  tags:
    - steamengine_deploy_drupal

- name: "Remove maintenance page"
  ansible.builtin.file:
    path:  "{{ steamengine_project_root_path }}/maintenance.html"
    state: absent
    owner: "{{ steamengine_project_user }}"
    group: "{{ steamengine_project_user }}"
    mode: u=rwx,g=rx,o=
  tags:
    - steamengine_deploy
  when: new_build_to_deploy and steamengine_drupal_show_maintenance_page